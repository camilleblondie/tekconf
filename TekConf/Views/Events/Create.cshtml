@model TekConf.Models.EventCreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create an event</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Event</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Event.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Event.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Event.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Event.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Event.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Event.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Event.location, htmlAttributes: new { @class = "control-label col-md-2" , id = "location"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Event.location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Event.location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Event.time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Event.time, new { htmlAttributes = new { @class = "form-control datetimepicker", @Value = "" } })
                @Html.ValidationMessageFor(model => model.Event.time, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Event.event_link, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Event.event_link, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Event.event_link, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Event.video_link, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Event.video_link, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Event.video_link, "", new { @class = "text-danger" })
            </div>
        </div>

        <h4>Technologies</h4>
        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <select class="js-example-basic-multiple" multiple="multiple" name="technologies[]">
                    @foreach (Technology t in Model.technologies)
                    {
                        <option value="@t.id">@t.name</option>
                    }
                </select>
            </div>
        </div>

        <h4>Speakers</h4>
        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <select class="js-example-basic-multiple" multiple="multiple" name="speakers[]">
                    @foreach (AspNetUsers u in Model.speakers)
                    {
                        <option value="@u.Id">@(u.Firstname + " " + u.Lastname)</option>
                    }
                </select>
            </div>
        </div>
        
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to events", "Index")
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
    $(function () {
        $('.datetimepicker').datetimepicker({ format: "DD/MM/YYYY HH:mm" });

        var input = document.getElementById('Event_location');
        var options = {
        };

        autocomplete = new google.maps.places.Autocomplete(input, options);
    });


</script>
}
